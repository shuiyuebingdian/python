
力扣题目：两数之和
给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。

你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

示例:

给定 nums = [2, 7, 11, 15], target = 9

因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]


python-方法1

class Solution:
    def twoSum(self, nums, target) :
        targetList = []
        find = False
        for i in range(len(nums) - 1):
            a = nums[i]
            for j in range(i + 1, len(nums)):
                b = nums[j]
                if a + b == target:
                    targetList.append(i)
                    targetList.append(j)
                    return targetList
            

python-方法2-时间提升明显
class Solution:
    def twoSum(self, nums, target) :
        dct = {}
        for i, n in enumerate(nums):
            if target - n in dct:
                return [dct[target - n], i]
            dct[n] = i
            
            
java--

class Solution {
    public int[] twoSum(int[] nums, int target) {
        
        Map<Integer, Integer> maps = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            int complement = target - nums[i];

            if (maps.containsKey(complement)) {
                return new int[] { maps.get(complement), i};
            }else{
                
            maps.put(nums[i], i);
            }
        }
        throw new IllegalArgumentException("No two sum solution");
    }
}

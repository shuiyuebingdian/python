'''
1-7-5: while循环
实现从1加到100的和，
定义一个初始值为0的变量Sum，存储每一步相加的结果，
每一步的结果等于上一步的结果加上当前要加的数字

第一步Sum = Sum + 1,
第二步Sum = Sum + 2,
第三步Sum = Sum + 3,
...
第100步Sum = Sum + 100
'''

# 每一步相加的和，初始值为0
Sum = 0
# 每一步的加数, 从1开始
num = 1;

# 循环相加，直到num>100
while num <= 100:
    Sum = Sum + num
    num = num + 1

# 打印求和结果
print(Sum)
    
'''
循环有两种方式：
    1、while循环
        如果要构造不知道具体循环次数的循环结构，我们推荐使用while循环
    2、for循环
        如果明确的知道循环执行的次数，我们推荐使用for-in循环
'''

'''
用for循环实现上面的功能
range(101)可以产生一个0到100的整数序列。
range(1, 100)可以产生一个1到99的整数序列
range(1, 100, 2)可以产生一个1到99的奇数序列，其中2是步长，即数值序列的增量

# 每一步相加的和，初始值为0
Sum = 0
for x in range(101):
    Sum += x

# 打印求和结果
print(Sum)
'''

'''
用for循环实现上面的功能
range(101)可以产生一个0到100的整数序列。
range(1, 100)可以产生一个1到99的整数序列
range(1, 100, 2)可以产生一个1到99的奇数序列，其中2是步长，即数值序列的增量

# 每一步相加的和，初始值为0
Sum = 0
for x in range(1, 101):
    Sum += x

# 打印求和结果
print(Sum)
'''



'''
用for循环实现1~100之间的偶数求和
range(101)可以产生一个0到100的整数序列。
range(1, 100)可以产生一个1到99的整数序列
range(1, 100, 2)可以产生一个1到99的奇数序列，其中2是步长，即数值序列的增量


# 每一步相加的和，初始值为0
Sum = 0
for x in range(2, 101, 2):
    Sum += x

# 打印求和结果
print(Sum)

'''

'''
用for循环实现1~100之间的奇数求和
range(101)可以产生一个0到100的整数序列。
range(1, 100)可以产生一个1到99的整数序列
range(1, 100, 2)可以产生一个1到99的奇数序列，其中2是步长，即数值序列的增量


# 每一步相加的和，初始值为0
Sum = 0
for x in range(1, 101, 2):
    Sum += x

# 打印求和结果
print(Sum)

'''
